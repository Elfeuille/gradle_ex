package jp.elfeuille.gradle.ex.core.mapper;

import java.util.List;
import jp.elfeuille.gradle.ex.core.entity.TestTable;
import jp.elfeuille.gradle.ex.core.entity.TestTableExample;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TestTableMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test_table
     *
     * @mbggenerated
     */
    @SelectProvider(type=TestTableSqlProvider.class, method="countByExample")
    int countByExample(TestTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test_table
     *
     * @mbggenerated
     */
    @DeleteProvider(type=TestTableSqlProvider.class, method="deleteByExample")
    int deleteByExample(TestTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test_table
     *
     * @mbggenerated
     */
    @Delete({
        "delete from test_table",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test_table
     *
     * @mbggenerated
     */
    @Insert({
        "insert into test_table (id, value)",
        "values (#{id,jdbcType=INTEGER}, #{value,jdbcType=VARCHAR})"
    })
    int insert(TestTable record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test_table
     *
     * @mbggenerated
     */
    @InsertProvider(type=TestTableSqlProvider.class, method="insertSelective")
    int insertSelective(TestTable record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test_table
     *
     * @mbggenerated
     */
    @SelectProvider(type=TestTableSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="value", property="value", jdbcType=JdbcType.VARCHAR)
    })
    List<TestTable> selectByExample(TestTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test_table
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, value",
        "from test_table",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="value", property="value", jdbcType=JdbcType.VARCHAR)
    })
    TestTable selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test_table
     *
     * @mbggenerated
     */
    @UpdateProvider(type=TestTableSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TestTable record, @Param("example") TestTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test_table
     *
     * @mbggenerated
     */
    @UpdateProvider(type=TestTableSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TestTable record, @Param("example") TestTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test_table
     *
     * @mbggenerated
     */
    @UpdateProvider(type=TestTableSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TestTable record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table test_table
     *
     * @mbggenerated
     */
    @Update({
        "update test_table",
        "set value = #{value,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TestTable record);
}